//  1 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
const set1 = new Set();
set1.add(99);
set1.add('Serge')
set1.add({name: 'Serge'});

for (let item of set1) {
    console.log(item + 333)
}

/*
432 // 333 + 99
'Serge333'
'[object Object]333' // {name: 'Serge'} - —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º. 
–ù–∏ —á–∏—Å–ª–æ, –Ω–∏ –æ–±—ä–µ–∫—Ç –Ω–µ —è–≤–ª—è—é—Ç—Å—è —Å—Ç—Ä–æ–∫–æ–π, –ø–æ—ç—Ç–æ–º—É –æ–Ω–∏ –ø—Ä–∏–≤–æ–¥—è—Ç—Å—è –∫ —Å—Ç—Ä–æ–∫–µ.
*/

//  2 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
console.log(Promise.resolve(5)); // ¬†{<fulfilled>: 5} - . 
// –°–∞–º –º–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±–µ—â–∞–Ω–∏–µ —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º (<fulfilled>) –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –º—ã –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–¥–∞–ª–∏ 
// —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ¬†5. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–µ –æ–±–µ—â–∞–Ω–∏–µ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º¬†5.


//  3 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
// –û–±—ä–µ–∫—Ç—ã –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø–æ —Å—Å—ã–ª–∫–µ. –ö–æ–≥–¥–∞ –º—ã –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ä–µ–∫—Ç—ã –Ω–∞ —Å—Ç—Ä–æ–≥–æ–µ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ (===), 
// –º—ã —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –∏—Ö —Å—Å—ã–ª–∫–∏. –ú—ã —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è¬†person2, —Ä–∞–≤–Ω–æ–µ –æ–±—ä–µ–∫—Ç—É¬†person3, 
// –∏ –ø–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç¬†person3¬†–≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–Ω–∞—á–µ–Ω–∏—è –¥–ª—è¬†person1. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –æ–±–∞ –∑–Ω–∞—á–µ–Ω–∏—è –∏–º–µ—é—Ç —Å—Å—ã–ª–∫—É –Ω–∞ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –º–µ—Å—Ç–æ –≤ –ø–∞–º—è—Ç–∏, –ø–æ—ç—Ç–æ–º—É –æ–Ω–∏ —Ä–∞–≤–Ω—ã.

function compare3(person1, person2 = person3) {
    if (person1 !== person2) {
        console.log('not the same')
    } else {
        console.log('they are the same')
    }
}

const person3 = {name: 'Serge'};
compare3(person3) // they are the same

//  4 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
// –í JavaScript —É –Ω–∞—Å –µ—Å—Ç—å –¥–≤–∞ —Å–ø–æ—Å–æ–±–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–≤–æ–π—Å—Ç–≤–∞–º –æ–±—ä–µ–∫—Ç–∞: –Ω–æ—Ç–∞—Ü–∏—è –≤ —Å–∫–æ–±–∫–∞—Ö –∏–ª–∏ –Ω–æ—Ç–∞—Ü–∏—è –≤ —Ç–æ—á–∫–∞—Ö. 
// –í —ç—Ç–æ–º –ø—Ä–∏–º–µ—Ä–µ –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ—á–µ—á–Ω—É—é –Ω–æ—Ç–∞—Ü–∏—é (colorConfig.colors) –≤–º–µ—Å—Ç–æ —Å–∫–æ–±–æ—á–Ω–æ–π –Ω–æ—Ç–∞—Ü–∏–∏ (colorConfig["colors"]).

const colorConfig4 = {
    red: true,
    blue: false,
    green: true,
    black: true,
    yellow: false,
}

const colors4 = ['pink', 'red', 'blue'];
console.log(colorConfig4[colors4[1]]); // true


//  5 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
console.log('üíõ' === 'üíõ'); // true
console.log('üíõ' == 'üíõ'); // true
// –ü–æ–¥ –∫–∞–ø–æ—Ç–æ–º —Å–º–∞–π–ª–∏–∫–∏ - —ç—Ç–æ —é–Ω–∏–∫–æ–¥—ã. –Æ–Ω–∏–∫–æ–¥ –¥–ª—è —Å–µ—Ä–¥—Ü–∞ —Å–º–∞–π–ª–∏–∫–æ–≤¬†"U+1F49B". –û–Ω–∏ –≤—Å–µ–≥–¥–∞ –æ–¥–∏–Ω–∞–∫–æ–≤—ã –¥–ª—è –æ–¥–Ω–æ–≥–æ –∏ —Ç–æ–≥–æ –∂–µ —Å–º–∞–π–ª–∏–∫–∞, 
// –ø–æ—ç—Ç–æ–º—É –º—ã —Å—Ä–∞–≤–Ω–∏–≤–∞–µ–º –¥–≤–µ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç¬†true.

//  6 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
// –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞¬†JSON.parse ()¬†–º—ã –º–æ–∂–µ–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å —Å—Ç—Ä–æ–∫—É JSON –≤ –∑–Ω–∞—á–µ–Ω–∏–µ JavaScript.

// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –≤ –¥–æ–ø—É—Å—Ç–∏–º—ã–π JSON, –∑–∞—Ç–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ JSON –≤ –∑–Ω–∞—á–µ–Ω–∏–µ JavaScript:
const jsonArray6 = JSON.stringify({ name: 'Lydia' }) // '{"name":"Lydia"}'
console.log(JSON.parse(jsonArray6)) // { name: 'Lydia' }

// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —á–∏—Å–ª–∞ –≤ –¥–æ–ø—É—Å—Ç–∏–º—ã–π JSON, –∑–∞—Ç–µ–º –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ JSON –≤ –∑–Ω–∞—á–µ–Ω–∏–µ JavaScript:
const jsonNumber6 = JSON.stringify(4) // '4'
console.log(JSON.parse(jsonNumber6)) // 4

// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ –≤ –¥–æ–ø—É—Å—Ç–∏–º—ã–π JSON, –∑–∞—Ç–µ–º —Ä–∞–∑–±–æ—Ä —Å—Ç—Ä–æ–∫–∏ JSON –≤ –∑–Ω–∞—á–µ–Ω–∏–µ JavaScript:
const jsonArr6 = JSON.stringify([1, 2, 3]) // '[1, 2, 3]'
console.log(JSON.parse(jsonArr6) )// [1, 2, 3]


//  7 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
let name7 = 'Lydia'

function getName7() {
  console.log(name7)
}

getName7() // Lydia

//  8 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?

let name8 = 'Lydia'

function getName8() {
  console.log(name8);
  let name8 = 'Serge';
}

// getName8() // ReferenceError: Cannot access 'name8' before initialization

//  9 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
// –í—ã—Ä–∞–∂–µ–Ω–∏—è –≤–Ω—É—Ç—Ä–∏ –ª–∏—Ç–µ—Ä–∞–ª–æ–≤ —à–∞–±–ª–æ–Ω–∞ —Ä–∞—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –ø–µ—Ä–≤—ã–º–∏. –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Å—Ç—Ä–æ–∫–∞ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å 
// –≤–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è, –≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –∏—Å–ø–æ–ª–Ω—è–µ–º—É—é —Ñ—É–Ω–∫—Ü–∏—é¬†(x => x)('I love'). 
// –ú—ã –ø–µ—Ä–µ–¥–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ¬†'I love'¬†–≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Å—Ç—Ä–µ–ª–æ—á–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏¬†x => x.¬†x¬†—Ä–∞–≤–Ω–æ¬†'I love', 
// –∫–æ—Ç–æ—Ä–æ–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è. –≠—Ç–æ –ø—Ä–∏–≤–æ–¥–∏—Ç –∫¬†I love to program.
console.log(`${(x => x)('i love')} to program`)

//  10 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
const person10 = {
    name: 'Serge',
}

Object.freeze(person10);
person10.name = 'Peter';
console.log(person10.name); // Serge

//  11 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
// –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —á–∏—Å–ª–∞ –≤ —á–∏—Å–ª–æ —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é.
// –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏
const num11 = 10.1122;
const newNum11 = num11.toPrecision(3);
console.log(typeof newNum11, newNum11); // string 10.1

// 12- –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
const num12 = true;
console.log(Number(num12)); // 1
const num12_2 = false;
console.log(Number(num12_2)); // 0
const num12_3 = '777';
console.log(Number(num12_3)); // 777

// 13 -  –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
// –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤–µ –∏–ª–∏ –Ω–µ—Ç
const arr13 = [41,42,43,44];
console.log(arr13.includes(44)); // true
console.log(arr13.includes(45)); // false

// 14 -  –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
// spread –æ–ø–µ—Ä–∞—Ç–æ—Ä –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏ —Ä–∞—Å—à–∏—Ä—è–µ—Ç –µ–≥–æ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
const arr14 = [55,56,57,58,59];
console.log(...arr14); // 55 56 57 58 59

// 15 -  –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
// –º–µ—Ç–æ–¥ reduce() - —Å–≤–æ–¥–∏—Ç –º–∞—Å—Å–∏–≤ –∫ –æ–¥–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é
const arr15 = [1,2,3,4,5];
const newArr15 = arr15.reduce((first, second) => first + second, 100);
console.log(newArr15); // 115

// 16 -  –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
const arr16 = [1,2,3,4];
const result16 = arr16.filter(item => item > 2);
console.log(result16); // [ 3, 4 ]

// 17 -  –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
const arr17 = [1,2,3,4];
const result17 = arr17.map(item => item > 2);
console.log(result17); // [ false, false, true, true ]

// 18-  –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
const a18 = c => c;
const b18 = c => c;
console.log(a18 === b18); // false
console.log(a18(4) === b18(4)); // true

// 19 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
// Object.entries() - –≤–æ–∑–≤—Ä, –æ–±—Ä–∞–±–æ—Ç–∞–≤ –ø–µ—Ä–µ–¥–∞–Ω–Ω –µ–º—É –æ–±—ä–µ–∫—Ç, –º–∞—Å—Å–∏–≤, —Å–æ–¥–µ—Ä–∂–∞—â –º–∞—Å—Å–∏–≤—ã - –∫–ª—é—á –∑–Ω–∞—á–µ–Ω–∏–µ
const user19 = {
    name: 'Serge',
    secondName: 'Ivanov',
    age: 77,
    car: 'kia'
}

console.log(Object.entries(user19));
/*
[
  [ 'name', 'Serge' ],
  [ 'secondName', 'Ivanov' ],
  [ 'age', 77 ],
  [ 'car', 'kia' ]
]
*/

// 20 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
// –º–µ—Ç–æ–¥ - Object.seal() - –ø–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–ø–µ—á–∞—Ç–∞—Ç—å –æ–±—ä–µ–∫—Ç, –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏–≤ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–≤–æ–π—Å—Ç–≤, –ø—Ä–∏ —ç—Ç–æ–º —Å—É—â–µ—Å—Ç–≤ —Å–≤-–≤–∞ –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å
const obj20 = {
    name: 'Anna'
}
Object.seal(obj20);
obj20.name = 'Katya';
obj20.car = 'Kia';
console.log(obj20); // { name: 'Katya' }

// 21 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å ?
// flat - –≠—Ç–æ –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å–æ –≤—Å–µ–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –≤–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, 
// —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–º–∏ —Å –≤—ã—à–µ—Å—Ç–æ—è—â–∏–º –º–∞—Å—Å–∏–≤–æ–º –¥–æ –∑–∞–¥–∞–Ω–Ω–æ–π –≥–ª—É–±–∏–Ω—ã.
const array21 = [1, 2, [3, 4]];
console.log(array21.flat()); // [1, 2, 3, 4];

// 22 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const crazyArray22 = [1, 2, [3, 4], [[5], [6, [7,8]]]];
console.log(crazyArray22.flat(Infinity)); // [1, 2, 3, 4, 5, 6, 7, 8];

// 23 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let arr23 = [1, 2, 3, 4, 5, 6];
let evenNumbers23 = arr23.filter(num => num % 2 === 0);
console.log(evenNumbers23); // [2, 4, 6]

// 24 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
for (var i24 = 0; i24 < 5; i24++) {}
console.log(i24) // 5

// 25 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –û–±—ä–µ–∫—Ç Set –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ª—é–±–æ–≥–æ —Ç–∏–ø–∞, –±—É–¥—å —Ç–æ –ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–ª–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ –æ–±—ä–µ–∫—Ç—ã.
// –ú–µ—Ç–æ–¥ has() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–æ–≥–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, —É–∫–∞–∑—ã–≤–∞—é—â–µ–µ, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —ç–ª–µ–º–µ–Ω—Ç —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤ –æ–±—ä–µ–∫—Ç–µ Set –∏–ª–∏ –Ω–µ—Ç. 
// –û–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, –¥–∞–∂–µ –µ—Å–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ.

const set25 = new Set();
set25.add(undefined);
console.log(set25.has(undefined)); // true

// 26 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –ú–µ—Ç–æ–¥ JSON.stringify() –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ JavaScript –≤ —Å—Ç—Ä–æ–∫—É JSON. –£ –º–µ—Ç–æ–¥–∞ –µ—Å—Ç—å –≤—Ç–æ—Ä–æ–π –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä replacer.
const user26 = {
    name: 'Serge',
    age: 35,
    email: 's@tut.by'
}

const data26 = JSON.stringify(user26,['name', 'age']);
console.log(data26); // {"name":"Serge","age":35}

// 26 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log('9' > '19'); // true
console.log('01' == '1'); // false

// 27 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const myArr27 = [1,2,'2',3,3,'3',4];
const mySetArr27 = [...new Set(myArr27)];
console.log(mySetArr27); // [ 1, 2, '2', 3, '3', 4 ]

// 28 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const myArr28 = [3,2,11,1];
console.log(myArr28.sort()); // [ 1, 11, 2, 3 ]

// 29 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const numbers29 = [1,2,3,4,5];
const [x29] = numbers29;
console.log(x29); // 1

// 30 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –î–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç —Å –ª—é–±—ã–º–∏ –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏. –°—Ç—Ä–æ–∫–∞ - –∏—Ç–µ—Ä–∏—Ä—É–µ–º–∞—è, —á–∏—Å–ª–æ - –Ω–µ—Ç.
const [a30, ...x30] = 'hello';
console.log(a30, x30); // h [ 'e', 'l', 'l', 'o' ]

// const [a30_2, ...x30_2] = 12345;
// console.log(a30_2, x30_2); // TypeError: 12345 is not iterable

// 31 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –ò str[index], –∏ charAt(index) –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç —É–∫–∞–∑–∞–Ω–Ω—ã–π —Å–∏–º–≤–æ–ª –∏–∑ —Å—Ç—Ä–æ–∫–∏. –†–∞–∑–Ω–∏—Ü–∞ –≤ —Ç–æ–º, —á—Ç–æ, 
// –µ—Å–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä index –≤—ã—Ö–æ–¥–∏—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —ç—Ç–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞, charAt –≤–µ—Ä–Ω—ë—Ç –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É, —Ç–æ–≥–¥–∞ –∫–∞–∫ str[index] - undefined.
const myCompany31 = 'helloWorld';
console.log(myCompany31[25]); // undefined
console.log(myCompany31.charAt(50)); // ''

// 32 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
class Parent {};
class Child extends Parent{};
let item32 = new Child();
console.log(item32 instanceof Child); // true
console.log(item32 instanceof Parent); // true

// 33 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –°—Ç—Ä–æ–∫–∏ –≤ JS —Å—Ä–∞–≤–Ω–∏–≤–∞—é—Ç—Å—è –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é. –ù–µ—Å–º–æ—Ç—Ä—è –Ω–∞ —Ä–∞–∑–Ω—É—é –∑–∞–ø–∏—Å—å –∑–Ω–∞—á–µ–Ω–∏—è —ç—Ç–∏—Ö –¥–≤—É—Ö —Å—Ç—Ä–æ–∫ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ.
const str33_1 = 'How\nare\nyou';
const str33_2 = `How
are
you`;
console.log(str33_1 === str33_2); // true   /n

// 34 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const date34 = new Date('Mon May 01 2023');
console.log(date34.getDate()); // 1 - day 1,2,3,4,5,6,7...31
console.log(date34.getMonth()); // 4 // may - 0,1,2,3,4

// 35 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log(1 + 2 + '1'); // 31 
console.log('1' + 1 + 2); // 112

// 36 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log(0 == '0'); // true
console.log(0 === '0'); // false
console.log(0 == []); // true
console.log(0 === []); // false
console.log('0' == []); // false
console.log('0' === []); // false

// 37 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log(null > 0, null < 0, null == 0, null >= 0); // false false false true

// 38 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
for (var i = 0; i < 10; i++) {}
console.log(i); // 10 —Ç–∫ –ù–∞ –∏—Ç–µ—Ä–∞—Ü–∏–∏ i = 9 , —É—Å–ª–æ–≤–∏–µ i < 10 –≤–µ—Ä–Ω–µ—Ç true –∞ –ø–æ—Ç–æ–º –°–Ω–æ–≤–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ª–æ–≤–∏—è: 10 < 10 = false

// 39 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// Object.freeze(obj) –∑–∞–º–æ—Ä–∞–∂–∏–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ obj –∏ –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞. –û–Ω –Ω–µ –∑–∞–º–æ—Ä–∞–∂–∏–≤–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è —ç—Ç–∏—Ö —Å–≤–æ–π—Å—Ç–≤.
const obj39 = {arr: ['foo']};
Object.freeze(obj39);
obj39.arr.push('test');
console.log(obj39.arr.length); // 2

// 40 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let x40 = 5;
x40 = (x40++ , x40 = addFive(x40), x40 *= 2, x40 -= 5, x40 += 10);
function addFive(num){
    return num + 5;
}
console.log(x40); // 5 + 1 -- 6+5=11 --11*2=22 -- 22-5=17; 17+10 =27 –û–¢–í–ï–¢: 27;

// 41 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let a41 = ['Javascript js frontend'];
let b41 = ['Javascript js frontend'];
console.log(a41 == b41); // false

// 42 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const b42 = new Boolean(false);
console.log('b42', b42, typeof b42); // object (typeof new Boolean(false) === 'object').
console.log(!!b42, b42 ? 'true' : 'false', b42 == true); // true 'true' false
const b42_2 = false;
console.log(!!b42_2, b42_2 ? 'true' : 'false', b42_2 == true); // false 'false' false

// 43 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log([0, 1, 2, 3].reduce((a, b) => a + b)); // 6

// 44 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const obj44 = {
    a: 'somestring',
    b: 42
  };
  
  for (const [key, value] of Object.entries(obj44)) {
    console.log(`${key}: ${value}`);
  }
  /*
    a: somestring
    b: 42
  */

  // 45 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
  // –ú–µ—Ç–æ–¥ filter() —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å–æ –≤—Å–µ–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—Ö–æ–¥—è—Ç —É—Å–ª–æ–≤–∏–µ, —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π.
  let users45 = [
    { id: 11, name: 'Adam', age: 23, group: 'editor' }, 
    { id: 47, name: 'John', age: 28, group: 'admin' }, 
    { id: 85, name: 'William', age: 34, group: 'editor' }, 
    { id: 97, name: 'Oliver', age: 28, group: 'admin' } 
  ]; 
  
  let res45 = users45.filter(it => it.group === 'admin'); 
  
  console.log(res45);
/*
    [
  { id: 47, name: 'John', age: 28, group: 'admin' },
  { id: 97, name: 'Oliver', age: 28, group: 'admin' }
]
*/

// 46 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// 7 - —ç—Ç–æ —á–∏—Å–ª–æ. –£–Ω–∞—Ä–Ω—ã–π + –Ω–∏–∫–∞–∫ –Ω–µ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –µ–≥–æ, –ø–æ—ç—Ç–æ–º—É –≤ –∫–æ–Ω—Å–æ–ª—å –≤—ã–≤–µ–¥–µ—Ç—Å—è -7.
const a46 = 7;
console.log(+-a46); // -7

// 47 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log(eval('10*10+10')); // 110

// 48 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –í–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞ if –º—ã —Å–æ–∑–¥–∞–ª–∏ –ª–æ–∫–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é a, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤–Ω—É—Ç—Ä–∏ —ç—Ç–æ–≥–æ –±–ª–æ–∫–∞
let a48= 10; 

if (a48 >= 3) { 
  let a = 5; 
} 

const b48 = a48; 
console.log(b48); // 10

// 49 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// a ??= b —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω–æ a ?? (–∞ = –±). 
// –ü—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ a –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∏–ª–∏ –∏–º–µ–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ null.
let a49 = 0;
let b49 = 5;
console.log(a49 ??= b49); // 0

let a49_2 = null;
let b49_2 = 5;
console.log(a49_2 ??= b49_2); //5

// 50 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –ú–µ—Ç–æ–¥ keys() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –∏—Ç–µ—Ä–∞—Ç–æ—Ä –º–∞—Å—Å–∏–≤–∞ Array Iterator, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –∫–ª—é—á–∏ –∫–∞–∂–¥–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –≤ –º–∞—Å—Å–∏–≤–µ.
const arr50 = ['One', 'Two', 'Three', 'Four', 'Five'];
const iterator50 = arr50.keys();

for (const key of iterator50) {
  console.log(key); // 0 1 2 3 4
}

// 51 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
function getPersonInfo51(one, two, three) {
  console.log(one);
  console.log(two);
  console.log(three);
}

// –ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏¬†—à–∞–±–ª–æ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫¬†–ø–µ—Ä–≤—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π. 
// –û—Å—Ç–∞–≤—à–∏–º–∏—Å—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ –±—É–¥—É—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π!

const person51 = 'Serge';
const age51 = 35;
getPersonInfo51 `${person51} is ${age51} old` // ["", " is ", " years old"]¬†"Lydia"¬†21

// 52 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
function sumValues52(x,y,z) {
  return x + y + z
}

console.log(sumValues52(...[1,2,3])) // 6

// 53 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log('Hi, Dad!'[0]); // H

// 54 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –° –ø–æ–º–æ—â—å—é¬†Object.seal¬†–º—ã –º–æ–∂–µ–º –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—Ç—å –∫–∞–∫¬†–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ¬†–Ω–æ–≤—ã—Ö —Å–≤–æ–π—Å—Ç–≤, —Ç–∞–∫ –∏¬†—É–¥–∞–ª–µ–Ω–∏–µ¬†—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö.
// –û–¥–Ω–∞–∫–æ, –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–≤–æ–π—Å—Ç–≤ –æ—Å—Ç–∞—ë—Ç—Å—è –¥–æ—Å—Ç—É–ø–Ω—ã–º.
const person54 = {name: 'Serge'};
Object.seal(person54);

// 55 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const add55 = x => x + x;
function myFunc55(num = 2, value = add55(num)) {
  console.log(num, value)
}

console.log(myFunc55()); // 2 4
console.log(myFunc55(3)); // 3 6

// 56 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const words56 = ['test', 'memory', 'invasion', 'kia', 'notifacation'];
const result56 = words56.filter(word => word.length > 4);
console.log(result56) // [ 'memory', 'invasion', 'notifacation' ]

// 57 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const moonLanding = new Date('July 20, 69 00:20:18');
console.log(moonLanding.getFullYear()) // 1969

// 58 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let fn58 = function() {};

console.log(!fn58() && fn58()); // undefined

// 59 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const arr59 = [1,2,3,4,5];
console.log(Array.from(arr59, x => x + x)); // [ 2, 4, 6, 8, 10 ]

// 60 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const arr60 = [4,25,66];
console.log(Math.abs(arr60)); // NaN

// 61 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const watchLict61 = new Set();
console.log(watchLict61.size); // 0

watchLict61.add('test');
console.log(watchLict61.size); // 1

// 62 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const result62 = '10' - 8 + true;
console.log(result62); // 3  —Ç–∫ 2 + 1

// 63 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const words63 = ['hey', 'test', 'abcd'];
const result63 = words63.concat(11, [22, [33]]);
console.log(result63) // [ 'hey', 'test', 'abcd', 11, 22, [ 33 ] ]

// 64 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –ú–µ—Ç–æ–¥ Object. fromEntries() –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–∞—Ä –∫–ª—é—á-–∑–Ω–∞—á–µ–Ω–∏–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç, 
// —Å–≤–æ–π—Å—Ç–≤–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –∑–∞–¥–∞—é—Ç—Å—è —ç—Ç–∏–º–∏ –∑–∞–ø–∏—Å—è–º–∏

const entries64 = new Map([
  ['foo', 'arrghh'],
  ['doo', 'tartkt']
])

const obj64 = Object.fromEntries(entries64);
console.log(obj64) // { foo: 'arrghh', doo: 'tartkt' }

// 65 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const num65 = 11;
console.log(num65 === 11 ? '11' : 'no 11'); // 11

// 66 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const obj66 = {55: 'tom', 77: 'bob', 99: 'jack'};
console.log(Object.keys(obj66)); // [ '55', '77', '99' ]

// 67 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const values67 = [1,2,3,4,5,6,7,8,9];
const [first67, ...rest67] = values67;
const item67 = rest67[1];
console.log(item67); // 3

// 68 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const numbers68 = [1,2,3,4,5];
let sum68 = 0;

for (let i = 0; i < numbers68.length; i++) {
  sum68 += numbers68[i]
}

console.log(sum68); // 15

// 69 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log(1 + '2' + '333'); // 12333

// 70 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log(typeof typeof 'test'); // string

// 71 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –ú–µ—Ç–æ–¥ join –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –≤ —Å—Ç—Ä–æ–∫—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º
const nums71 = [11, 22, 33];
const result71 = nums71.join();
console.log(result71)

// 72 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const age72 = 100;
const result72 = age72 >= 55 ? 'grandpapa' : 'superman';
console.log(result72); // grandpapa

// 73 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const obj73 = {1: 'i', 2: 'love', 3: 'beer'};
const set73 = new Set([1,2,3]);

console.log(obj73.hasOwnProperty('1')); // truw
console.log(obj73.hasOwnProperty(1)); // true
console.log(set73.has('1')); // false
console.log(set73.has(1)); // true

// 74 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const arr74 = [1,2,3,4,5];
const result74 = arr74.map(x => {
  setTimeout(() => console.log(x), 1000);
  return x * 2;
});
console.log(result74); // [ 2, 4, 6, 8, 10 ] –∞ –ø–æ—Ç–æ–º 1 2 3 4 5

// 75 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let num75 = 101;

try {
  num75 = 2/ 0
  
} catch (error) {
  delete num75
} finally {
  num75 = num75 * -1
}

console.log(num75) // -Infinity

// 76 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// keys –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –∏–º–µ–Ω–∞–º –ø–µ—Ä–µ—á–∏—Å–ª—è–µ–º—ã—Ö —Å–≤–æ–π—Å—Ç–≤, 
// –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω–æ –≤ —Å–∞–º–æ–º –æ–±—ä–µ–∫—Ç–µ
const arr76 = ['aa', 'bb', 'cc'];
const iterator76 = arr76.keys();
console.log(iterator76); // Object [Array Iterator] {}

for (const key of iterator76) {
  console.log(key) // 0 1 2
}


// 77 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let num77 = 10;

const incNum = () => num77++;
console.log(num77); // 10
const incPassNum = number => number++;

const num77_1 = incNum();
const num77_2 = incPassNum(num77_1);
console.log(num77_1); // 10
console.log(num77_2); // 10

// 78 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const myObj78 = {
  x: 1,
  y: 2,
  z: {
    a: 3,
    b: 4
  }
}

const copyObj78 = { ... myObj78};
copyObj78.z.a = 555;
console.log(myObj78.z.a); // 555;

// 79 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const nums79 = [1,2,3,4,5,6,7,8,9];
const odds79 = [];

for (let i = 0; i < nums79.length; i++) {
  if (nums79[i] % 2 !==0) {
    odds79.push(nums79[i])
  }
}

console.log(odds79); // [ 1, 3, 5, 7, 9 ]

// 80 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –£–Ω–∞—Ä–Ω—ã–π –ø–ª—é—Å –ø–µ—Ä–µ–¥ e –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ —Ç—Ä–∞–Ω—Å–æ—Ä–º–∏—Ä—É—è –µ–≥–æ –≤ NaN 
const result80 = ('b' + 'e' + + 'e' + 'r').toLowerCase();
console.log(result80); // benanr

// 81 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const nums81 = [1,2,3,4,5,6,7,8,9];
const sum81 = nums81.reduce(function(currSum, currNum) {
  return currSum + currNum
}, 0);

console.log(sum81); // 45

// 82 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const nums82 = [1,2,3,4,5,6];

const squares82 = nums82.map(function(num) {
  return num * num;
})

console.log(squares82); // [ 1, 4, 9, 16, 25, 36 ]

// 83 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const obj83 = {a: 11, b: 22};
const arr83 = [3,4,5];
const { a, b} = obj83;
const [c83, ...d83] = arr83;
console.log(a, b, c83, d83); // 11 22 3 [ 4, 5 ]

// 84- –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log(null || 2 || undefined); // 2

// 85- –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const arr85 = [1,2,3];
const func85 = (x) => {
  console.log(x);
}

arr85.forEach(func85); // 1 2 3

// 86- –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
function a86(value) {
  return true - value
}

var b86 = a86('4') + a86('-4') + a86('-4') + a86(4);
console.log(b86) // true - '4' = -3; true - -'4' = 5 // 4  true - '-4'  true - 4 = -3

// 87 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const person87 = {
  name: 'serge',
  age: 30,
  address: {
    city: 'Minsk',
    country: 'BLR'
  }
}

const { name, age, address: { city, country}} = person87;
console.log(name, age, city, country); // serge 30 Minsk BLR

// 88 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const myTeam = ['Arsenal', 'PSG', 'Bornmut', 'Milan'];
const action = myTeam.pop();

console.log(myTeam); // [ 'Arsenal', 'PSG', 'Bornmut' ]
console.log(action); // Milan

// 89 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log(Math.round(17.51)); // 18

// 90 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
function abc90() {
  return typeof arguments;
}

console.log(abc90()) // object

// 91 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const obj91 = {a: 1, b: 2, c: 3};
Object.prototype.keys = function() {
  return Object.values(this).reverse()
}
console.log(obj91.keys()); // [ 3, 2, 1 ]

// 92 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let a92 = 20;
let b92 = a92++;
let c92 = ++a92;
let d92 = (a92 = b92 + c92);
console.log(a92, b92, c92, d92);

// 93 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –ú–µ—Ç–æ–¥¬†flat()¬†–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏ —É–º–µ–Ω—å—à–∞–µ—Ç –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å –º–∞—Å—Å–∏–≤–∞ –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–≤–Ω–µ–π.
// –ú–µ—Ç–æ–¥ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç¬†depth¬†‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–≤–Ω–µ–π, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–º–µ–Ω—å—à–∏—Ç—å –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å. 
// –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî 1. –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–∞¬†flat()¬†–±—É–¥–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –º–µ–Ω—å—à–µ–π –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏.
const arr93 = [
  '1 stage',
  [
    '2 stage',
    [
      ' 3 stage'
    ]
  ]
]

const flat93 = arr93.flat();
console.log(flat93);// [ '1 stage', '2 stage', [ ' 3 stage' ] ]

// 94- –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const arr94 = [1,2,3];
const newArr94 = arr94.slice(0,2);
console.log(newArr94); // [ 1, 2 ]

// 95- –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
var b95 = 10;
if (b95 % 3 === 0) {
  var i93 = 10;
}

console.log(i93); // undefined  or 9 /3 => // 10

// 96- –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log(1 + '2' + '2'); // 122
console.log(+'1' + '1' + '2'); // 112
console.log('A' - 'B' + '2'); // NaN2
console.log('A' - 'B' + 2); // NaN

// 97- –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let x97 = [1,2,3,4];
x97.push(4);
x97.pop();
x97.unshift(0);
console.log(x97); // [ 0, 1, 2, 3, 4 ]

// 98- –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const a98 = 1;

function foo98() {
  const b98 = 2;

  function bar98() {
    const c98 = 3;
    console.log(a98 + b98 + c98);
  }

  bar98();
}

foo98(); // 6

// 99- –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let a99 = 10;

function test99() {
  console.log(a99);
  let a99 = 20;
}

test99(); // ReferenceError

// 100 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const getlist100 = ([x, ...y]) => [x, y];
const list100 = [1,2,3,4];

console.log(getlist100(list100)); // [ 1, [ 2, 3, 4 ] ]

// 101 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log('2' + 2 - '1'); // 21

// 102 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let date102 = new Date('December 25, 1995 23:15:30');
let result102 = date102.getHours();
console.log(result102); //23

// 103 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –ú–µ—Ç–æ–¥ –º–∞—Å—Å–∏–≤–∞ .every() –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–∑–Ω–∞—Ç—å, —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç –ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ —É—Å–ª–æ–≤–∏—é –≤ —Ñ—É–Ω–∫—Ü–∏–∏-–∫–æ–ª–±—ç–∫–µ
const users103 = [
  {name : 'Serge', online: true},
  {name : 'Anna', online: true},
  {name : 'Peter', online: true},
]

const isOnline = users103.every(user => {
  return user.online
})

console.log(isOnline); // true

// 104 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// indexOf() - –∏—â–µ—Ç –≤—Ö–æ–∂–¥–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ –º–∞—Å—Å–∏–≤ –∏–ª–∏ –ø–æ–¥—Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å.
const example104 = ['apple', 'grape', 'vine'];
console.log(example104.indexOf('grape')); // 1
console.log(example104.indexOf('rrrrr')); // -1

// 105 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
for ( i = 5; i < 8; i++) {
  for (j = i; j < i + 1; j++) {
    console.log(j); // 5 6 7
  }
}

// 106 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let a106 = 3;
let b106 = new Number(3);
let c106 = 3;

console.log(a106 == b106); // true
console.log(a106 === b106); // fALSE
console.log(b106 === c106); // false

// 107 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥¬†Array.isArray()¬†–ø—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–æ–º. 
const arr107 = [1,2,3,4,5,6];
const emptyArr107 = [];
const bool107 = true;
const num107 = 5;

console.log(Array.isArray(arr107)); // true
console.log(Array.isArray(emptyArr107)); // true
console.log(Array.isArray(bool107)); // false
console.log(Array.isArray(num107)); // false

// 108 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log([1 + 2, 1 * 2, 1 / 2]); // [ 3, 2, 0.5 ]

// 109 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log(!['test']); // false
console.log(![]); // false
console.log(!![null]); // true

// 110 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log([1,2] + [3,4]); // 1,23,4
console.log(null == undefined); // true
console.log(null === undefined); // false

// 111 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// clearTimeout()¬†- –æ—á–∏—â–∞–µ—Ç —Ç–∞–π–º–∞—É—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å –ø–æ–º–æ—â—å—é¬†setTimeout()
const timerId = setTimeout(() => {
  console.log('–ü—Ä–æ—à–ª–∞ —Å–µ–∫—É–Ω–¥–∞')
})

clearTimeout(timerId); //-

// 112 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
function myFunc112(a,b,c) {
  arguments[2] = 99;
  console.log(c)
}

myFunc112(10, 20 ,30); // 99

// 113 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
function test113() {
  var x = 101;
  if(x > 99) {
    x = 77;
  }
  console.log(x); // 77
}

test113();

// 114 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const arr114 = [1,2,3];
const sum114 = arr114.reduce((acc, val) => {
  return acc + val * 2
}, 0);

console.log(sum114); // 12

// 115 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ –≤ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–æ–∫–∏, 
// —á—Ç–æ–±—ã —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–æ—Å—Ç–∏–≥–ª–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã.
var str115 = "15"
var newStr115 = str115.padStart(4, "3")
console.log(newStr115); // 3315

// 116 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let a116 = 10;
let b116 = 20;
let c116 = 50;

let result116 = (a116 + b116) * c116 / a116;
console.log(result116); 150

// 117 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let a117 = 10;
setTimeout(() => {
  a117 = 99;
},0)

console.log(a117); //10  ,1000 => 10

// 118 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const a118 = [1,2,3,5];
const b118 = a118;
b118.push(999);
console.log(a118); // [ 1, 2, 3, 5, 999 ]

// 119 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log(Promise.resolve('test')); // Promise¬†{<fulfilled>: 'test'}  - –≤ –∫–æ–Ω—Å–æ–ª–µ

// 120 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const arr120 = Array.from('invasion');
console.log(arr120); // (8)¬†['i', 'n', 'v', 'a', 's', 'i', 'o', 'n']

// 121 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const a121 = {
  x: 10,
  y: 20,
  z: 30
};

const b121 = { ...a121, y: 999};
console.log(a121); // { x: 10, y: 20, z: 30 }
console.log(b121); // { x: 10, y: 999, z: 30 }

// 122 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const nums122 = [1,2,3,4,5,6,7,8,9,10];
const evenOnly = nums122.filter(function(n) {
  const remainder = n % 2;
  console.log(remainder); // 1 0 1 0 1 0 1 0 1 0
  return remainder === 0;
})

console.log(evenOnly); // [ 2, 4, 6, 8, 10 ]

// 123 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const a123 = () => console.log('a');
const b123 = () => console.log('b');

setTimeout(a123, 1000); // a
setTimeout(b123, 1000); // b

// 124 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const obj124 = {
  a: 1,
  b: 2,
  c: 3
}

for (const prop in obj124) {
  console.log(prop); // a b c
}

// 125 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let x125 = 1;
let y125 = 2;
let z125 = x125+++y125;
console.log(z125); // 3 —Ç–∫ 1+2

// 126 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∏—Å–ª–æ, –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∏–∑ —Ä–∞–∑–æ–±—Ä–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏–ª–∏¬†NaN, 
// –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π —Å–∏–º–≤–æ–ª –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ —á–∏—Å–ª–æ.
console.log(parseFloat('12.12')); // 12.12
console.log(parseFloat('12')); // 12
console.log(parseFloat('    12.12')); // 12.12
console.log(parseFloat('abc')); // NaN

// 127 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const a127 = [1,2,3,4,5];
const b127 = a127.slice(0,2);
b127.push(676);

console.log(a127); // [ 1, 2, 3, 4, 5 ]
console.log(b127); // [ 1, 2, 676 ]

// 128 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
var x128 = 10;
function foo128() {
  console.log(x128); // undefined
  var x128 = 5;
  console.log(x128); // 5
}

foo128();

// 129 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
var b129 = 10;

if(b129 % 3 == 0) {
  var i129 = 20;
}

console.log(i129); // undefined  9 => 20

// 130 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let array130 = [1,2,3,4,5];
array130.unshift(1);

console.log(array130); // [ 1, 1, 2, 3, 4, 5 ]

// 131 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –ú–µ—Ç–æ–¥ values() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞.
const object131 = {
  name: 'Jo',
  age: 25,
};
console.log(Object.values(object131)); // [ 'Jo', 25 ]


// 132 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const object132 = {
  name: 'Jo',
  age: 28,
};
console.log(Object.keys(object132)); // [ 'name', 'age' ]

// 133 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –í –¥–∞–Ω–Ω–æ–π –∑–∞–¥–∞—á–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä –∑–∞–ø—è—Ç–∞—è, —Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è —Å–ª–µ–≤–æ –Ω–∞–ø—Ä–∞–≤–æ.
let num133 = 13;
const minusEight133 = x => x - 8;

num133 = (num133--, num133 *= 3, num133 = minusEight133(num133), num133 -= 4);

console.log(num133); // 24
/*
1) 13-- = 12
2) 12 *=3 = 36
3) 36 - 8 = 28
4) 28 -= 4 = 24
*/

// 134 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –ú–µ—Ç–æ–¥ Math.log2() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–≤–æ–∏—á–Ω—ã–π (–ø–æ –æ—Å–Ω–æ–≤–∞–Ω–∏—é 2) –ª–æ–≥–∞—Ä–∏—Ñ–º —á–∏—Å–ª–∞.
// 2 –≤ —Å—Ç–µ–ø–µ–Ω–∏ result –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–∞–≤–Ω–æ 32. –≠—Ç–æ 5.
const num134 = 32;
const result134 = Math.log2(num134);
console.log(result134); //5 2*2*2*2*2


// 135 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –û–±—ä–µ–∫—Ç arguments - —ç—Ç–æ –æ–±—ä–µ–∫—Ç —Ç–∏–ø–∞ Array, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∞–≥—Ä—É–º–µ–Ω—Ç–∞–º, –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –≤ —Ñ—É–Ω–∫—Ü–∏—é. 
// –û–±—ä–µ–∫—Ç arguments –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –º–∞—Å—Å–∏–≤–æ–º. 
// –û–Ω –ø–æ—Ö–æ–∂ –Ω–∞ –º–∞—Å—Å–∏–≤, –Ω–æ –Ω–µ –∏–º–µ–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö —Å–≤–æ–π—Å—Ç–≤ –º–∞—Å—Å–∏–≤–∞, –∫—Ä–æ–º–µ –¥–ª–∏–Ω—ã (length). –£ –Ω–µ–≥–æ –Ω–µ—Ç –º–µ—Ç–æ–¥–∞ join().
const func135 = function () {
  return arguments.join("");
}
const front_tests135 = func135(43, 78);
console.log(front_tests135); // arguments.join is not a function

// 136 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –í—ã–∑–æ–≤ Promise —Å–æ–∑–¥–∞—é—Ç —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—É—é –º–∏–∫—Ä–æ —Ç–∞—Å–∫—É (–º–∏–∫—Ä–æ –∑–∞–¥–∞—á—É), –∞ setTimeout —Å–æ–∑–¥–∞—ë—Ç –º–∞–∫—Ä–æ —Ç–∞—Å–∫—É. 
// –ú–∏–∫—Ä–æ —Ç–∞—Å–∫–∞ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –±—ã—Å—Ç—Ä–µ–µ, –ø–æ—ç—Ç–æ–º—É –≤—ã–≤–µ–¥–µ—Ç—Å—è 'three', –∞ —É–∂–µ –ø–æ—Å–ª–µ 'two'.
console.log('one');
setTimeout(function() {
  console.log('two');
}, 0);
Promise.resolve().then(function() {
  console.log('three');
})
console.log('four');  // one four three two

// 137 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –º–µ—Ç–æ–¥ foreach –Ω–µ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –¥–ª—è —É–¥–∞–ª—ë–Ω–Ω—ã—Ö –∏–ª–∏ –ø—Ä–æ–ø—É—â–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞. 
// –û–¥–Ω–∞–∫–æ, –æ–Ω–∞ –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –º–∞—Å—Å–∏–≤–µ –∏ –∏–º–µ—é—Ç –∑–Ω–∞—á–µ–Ω–∏–µ undefined.
const array137 = [1, 3, , 7];
array137.forEach((element) => {
  console.log(element); // 1 3 7
});

// 138 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –û–ø–µ—Ä–∞—Ç–æ—Ä –∑–∞–ø—è—Ç–æ–π –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç –∫–∞–∂–¥—ã–π –∏–∑ —Å–≤–æ–∏—Ö –æ–ø–µ—Ä–∞–Ω–¥–æ–≤(—Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ) 
// –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–ø–µ—Ä–∞–Ω–¥–∞. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ —ç—Ç–æ 5
const func138_1 = () => true; 
const func138_2 = () => 'Hello world'; 
const func138_3 = () => 5;
const front_tests138 = (func138_1(), func138_2(), func138_3()); 
console.log(front_tests138); // 5

// 139 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –ú–µ—Ç–æ–¥ push() –¥–æ–±–∞–≤–ª—è–µ—Ç –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é –¥–ª–∏–Ω—É –º–∞—Å—Å–∏–≤–∞.
// –ú–µ—Ç–æ–¥ apply() –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º this –∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –≤ –≤–∏–¥–µ –º–∞—Å—Å–∏–≤–∞. 
// –≠—Ç–æ —Ç–æ –∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ const front_tests = arr1.push(...arr2);
const push139 = Array.prototype.push; 
const arr1_139 = [100, 200]; 
const arr2_139 = [200, 100]; 
const front_tests139 = push139.apply(arr1_139, arr2_139); 
console.log(front_tests139); // 4

// 140 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
/*
Array.from() –∏–º–µ–µ—Ç –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä mapFn, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ñ—É–Ω–∫—Ü–∏—é map –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ 
—Å–æ–∑–¥–∞–≤–∞–µ–º–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ (–∏–ª–∏ –µ–≥–æ –ø–æ–¥–∫–ª–∞—Å—Å–∞). 
–ü—Ä–æ—â–µ –≥–æ–≤–æ—Ä—è, –≤—ã–∑–æ–≤ Array.from(obj, mapFn, thisArg) —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–µ–Ω —Ü–µ–ø–æ—á–∫–µ 
Array.from(obj).map(mapFn, thisArg), –∑–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º —Ç–æ–≥–æ, —á—Ç–æ –æ–Ω –Ω–µ —Å–æ–∑–¥–∞—ë—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞.
*/
let other140 = item => item * 5.5;
let arrFrom140 = Array.from([0, 3, 5.5], other140);
let result140 = arrFrom140.join("-");
console.log(result140); // 0-16.5-30.25

// 141 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const obj141 = {};
obj141['1'] = 1;
obj141[1] = 1;
obj141[null] = 1;
obj141['null'] = 1;

console.log(Object.values(obj141).length); // 2

// 142 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –§—É–Ω–∫—Ü–∏—è isNaN() –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ª–∏—Ç–µ—Ä–∞–ª –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–µ—á–∏—Å–ª–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º (NaN) –∏–ª–∏ –Ω–µ—Ç.
console.log(isNaN()); // true
console.log(isNaN(undefined)); // true
console.log(isNaN({})) // true

// 143 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const numbers143 = [33, 2, 8];
numbers143.sort();
console.log(numbers143[1]); // 33

// 144 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const x144 = [1,2,3,4,5,6];
console.log(x144.slice(1, 3)); // [ 2, 3 ]

// 145 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let obj145 = {a: 1, b: 2};
let arr145 = [3, 4];
let str145 = 'Hello World';

console.log(obj145.a, arr145[0], str145.length, arr145.length, obj145.c); // 1 3 11 2 undefined

// 146 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let squares146 = [2, 4, 6].map(x => x * x);
[a146, b146] = squares146;
console.log(a146 + b146); // 20

// 147 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const x147 = [1,2,3,4,5];
const y147 = x147.reverse();
console.log(x147 === y147); // true

// 148 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log('test script.' instanceof String); // false

// 149 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
var x149 = 5;
(function() {
  console.log(x149); // undef
  var x149 = 10;
  console.log(x149); // 10
})();

// 150 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –ø–æ—Ç–µ—Ä—è —Ç–æ—á–Ω–æ—Å—Ç–∏ 
const a150 = 0.1;
const b150 = 0.2;
const c150 = 0.3;

console.log(a150 + b150 === c150); // false

// 151 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let array151 = [1,2,3];
array151[6] = 9;
console.log(array151[5]); // undef

// 152 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// When using numeric keys, the values are returned in the keys' numerical order
const scram152 = {2: 'e', 5: 'o', 1: 'h', 4: 'l', 3: 'l'};
console.log(Object.values(scram152)) // [ 'h', 'e', 'l', 'l', 'o' ]
const result152 = Object.values(scram152).reduce((agg, el) => agg + el, '');
console.log(result152); // hello

// 153 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
// –ú–µ—Ç–æ–¥ flat() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏ —É–º–µ–Ω—å—à–∞–µ—Ç –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å –º–∞—Å—Å–∏–≤–∞ –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–≤–Ω–µ–π.
const arr153 = [1, [2, [3, [4, [5, [6, [7], 8], 9], 10]]], 12];
const result153 = arr153.flat(5);
console.log(result153); // [1, 2, 3, 4, 5, 6, [7], 8, 9, 10, 12]

// 154 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const person154 = {
  name: "John",
  introduction: function() {
    console.log(`My name is ${this.name}`);
  }
};
const me154 = Object.create(person154);
me154.name = 'Robert'; 
me154.introduction(); // My name is Robert

// 155 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log(1 + '1'); // 11
console.log('1' - 1); // 0

// 156 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
function getUser156() {
  return {
    name: 'Jhon',
    age: 30,
  }
}

const user156 = getUser156();
console.log(user156.name);

// 157 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log(Math.round(15.52)); //16
console.log(Math.ceil(15.52)); // 16
console.log(Math.round(15.2)); // 15
console.log(Math.ceil(15.3)); // 16
console.log(Math.floor(15.3)); // 15
console.log(Math.floor(-15.3)); // -16
console.log(Math.floor(15.52)); // 15
console.log(Math.trunc(15.52)); // 15
console.log(Math.trunc(-15.3)); // -15
/*
‚úì¬† round()¬†‚Äî –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –ø–æ –æ–±—ã—á–Ω—ã–º –ø—Ä–∞–≤–∏–ª–∞–º;
‚úì¬† floor()¬†‚Äî –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –≤–Ω–∏–∑;
‚úì¬† ceil()¬†‚Äî –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –≤–≤–µ—Ä—Ö;
‚úì¬† trunc()¬†‚Äî –æ—Ç–±—Ä–∞—Å—ã–≤–∞–Ω–∏–µ –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç–∏, –Ω–µ –æ–±—Ä–∞—â–∞—è –≤–Ω–∏–º–∞–Ω–∏—è –Ω–∞ –∑–Ω–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç–∞.
*/

// 158 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
const isTrue158 = true == []; // false
const isFalse158 = true ==![]; // false
console.log(isTrue158, isFalse158, isTrue158 + isFalse158); // 0

// 159 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
let arr159 = [1,2,3,4,5];
let newArr159 = arr159.filter(num => num > 2).map(num => num * 2);
console.log(newArr159); // [ 6, 8, 10 ]

// 160 - –ß—Ç–æ –≤—ã–≤–µ–¥–µ—Ç –∫–æ–Ω—Å–æ–ª—å?
console.log(Math.PI); // 3.141592653589793
console.log(Math.abs(-118)); // 118